[
{
	"uri": "/klaytn-baobab-setup-workshop/10_prerequisites/10_firewall_configuration.html",
	"title": "Firewall Configuration",
	"tags": [],
	"description": "",
	"content": "\n1. (Only for CN) Firewall configuration 1) If pre-cypress performance test is completed, remove below Klaytn CN\u0026rsquo;s IP address of Pre-cypress from your firewall ingress rule. Pre Cyprss KF CN IP Pre Cyprss KF BN IP\n2) For communication and multichannel between Baobab CN, allow TCP 32323-32324 with below IP addresses to your firewall ingress rule. 54.180.180.202\n54.180.18.176\n52.79.134.72\n52.78.232.39 13.124.59.131\n3) Additionally, it is required to allow UDP 32323 with the same IP addresses to your firewall ingress rule. 54.180.180.202\n54.180.18.176\n52.79.134.72\n52.78.232.39\n13.209.190.55\n4) For communication, allow all traffic to your firewall egress rule. IP version | Type | Protocol | Port range | Destination --------------------------------------------------------------------------------------- IPv4 | All traffic | All | All | 0.0.0.0/0 Please note that the above four IP addresses are attached to the Klaytn Baobab CNs.\nIf you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/50_start_services/10_start_klaytn_service.html",
	"title": "Start the klaytn services",
	"tags": [],
	"description": "",
	"content": "\n1. Start the Klaytn service, if it is running. 1) For CN, $ sudo systemctl status kcnd $ sudo systemctl start kcnd $ sudo systemctl status kcnd 2) For PN, $ sudo systemctl status kpnd $ sudo systemctl start kpnd $ sudo systemctl status kpnd 3) If the services are not installed from yum, you can start the service like below, $ sudo \u0026lt;installation_path\u0026gt;/kcnd status $ sudo \u0026lt;installation_path\u0026gt;/kcnd start $ sudo \u0026lt;installation_path\u0026gt;/kcnd status If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/40_configure_network/10_prepare_genesis_for_baobab.html",
	"title": "Prepare genesis.json for Baobab network",
	"tags": [],
	"description": "",
	"content": "\n1. Remove or backup existing genesis.json for Pre-cypress. 1) For CN, $ mv \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/data/genesis.json \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/data/genesis.json.pre-cypress 2) For PN, $ mv \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/data/genesis.json \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/data/genesis.json.pre-cypress If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/30_download_chaindata/10_download_chaindata.html",
	"title": "Download the latest Baobab chaindata",
	"tags": [],
	"description": "",
	"content": "\n1. Download the latest chaindata snapshot from the Baobab snapshot archive. 0) Before proceeding, please check if your disk space is enough to store and extract the Baobab chaindata. ** You can refer to the chaindata size via Boabab snapshot archive where the Baobab chaindata snapshots have been snapshotted.\n1) Download the latest one from the archive. ** Please note that this step will take a lot of time to download since snapshot is more than 100 GB. If you want to reduce the time, please refer the next step.\n** The latest chaindata name can be different with this example due to the date information.\n1) For CN ** Please note that this step will take a lot of time to download since snapshot is more than 1.4 TB. If you want to reduce the time, please refer the next step.\n** The latest chaindata name can be different with this example due to the date information. $ URL=`curl -s https://packages.klaytn.net/baobab/pruning-chaindata/ |grep latest |awk -F\u0026#39;\u0026#34;\u0026#39; \u0026#39;{print $2}\u0026#39;` $ echo $URL https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/baobab/pruning/klaytn-baobab-pruning-chaindata-20240131010111.tar.gz $ wget $URL\n2) For PN $ URL=`curl -s https://packages.klaytn.net/baobab/pruning-chaindata/ |grep latest |awk -F\u0026#39;\u0026#34;\u0026#39; \u0026#39;{print $2}\u0026#39;` $ echo $URL https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/baobab/pruning/klaytn-baobab-pruning-chaindata-20240131010111.tar.gz $ wget $URL 2) Optional - If you want to save the time for downloading, you can consider using axel command. **Axel tries to accelerate the download process by using multiple connections per file.\n1) For CN (Amazon Linux 2) $ sudo amazon-linux-extras install epel (CentOS) $ sudo yum install epel-release -y $ sudo yum install axel -y $ URL=`curl -s https://packages.klaytn.net/baobab/pruning-chaindata/ |grep latest |awk -F\u0026#39;\u0026#34;\u0026#39; \u0026#39;{print $2}\u0026#39;` $ echo $URL https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/baobab/pruning/klaytn-baobab-pruning-chaindata-20240131010111.tar.gz $ axel -n8 $URL 2) For PN (Amazon Linux 2) $ sudo amazon-linux-extras install epel (CentOS) $ sudo yum install epel-release -y $ sudo yum install axel -y $ URL=`curl -s https://packages.klaytn.net/baobab/pruning-chaindata/ |grep latest |awk -F\u0026#39;\u0026#34;\u0026#39; \u0026#39;{print $2}\u0026#39;` $ echo $URL https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/baobab/pruning/klaytn-baobab-pruning-chaindata-20240131010111.tar.gz $ axel -n8 $URL If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/20_network_reset/10_stop_klaytn.html",
	"title": "Stop the Klaytn service",
	"tags": [],
	"description": "",
	"content": "\n1. Stop the Klaytn service, if it is running. 1) For CN, $ sudo systemctl status kcnd $ sudo systemctl stop kcnd $ sudo systemctl status kcnd 2) For PN, $ sudo systemctl status kpnd $ sudo systemctl stop kpnd $ sudo systemctl status kpnd 3) If the services are not installed from yum, you can stop the service like below, $ sudo \u0026lt;installation_path\u0026gt;/kcnd status $ sudo \u0026lt;installation_path\u0026gt;/kcnd stop $ sudo \u0026lt;installation_path\u0026gt;/kcnd status If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/10_prerequisites.html",
	"title": "Prerequisites",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Prerequisites The prerequisites for joining Baobab network are covered in this chapter.\nPlease click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/10_prerequisites/20_package_installation.html",
	"title": "Package Installation",
	"tags": [],
	"description": "",
	"content": "\n2. Installation of Klaytn packages for CN and PN ** We\u0026rsquo;ve already installed packages during the Pre-cypress stage. If you need to install newly, please refer these documents.\n1) CN - https://docs.klaytn.foundation/docs/nodes/core-cell/install/install-consensus-nodes/ 2) PN - https://docs.klaytn.foundation/docs/nodes/core-cell/install/install-proxy-nodes/ If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/50_start_services/20_start_telegraf_service.html",
	"title": "Start the Telegraf service",
	"tags": [],
	"description": "",
	"content": "\n2. Start the Telegraf service, if it is running. 1) For both CN and PN, $ sudo systemctl status telegraf $ sudo systemctl start telegraf $ sudo systemctl status telegraf If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/40_configure_network/20_node_configuration.html",
	"title": "Node Configuration",
	"tags": [],
	"description": "",
	"content": "\n1. Modify network, discovery and boot node information. ** Note that CN and PN have some different information.\n1) For CN, your configuration should be modified as shown below. $ egrep \u0026#34;^NETWORK|NO_DISCOVER|BOOTNODES|ADDITIONAL\u0026#34; /etc/kcnd/conf/kcnd.conf NETWORK=\u0026#34;baobab\u0026#34; NETWORK_ID= NO_DISCOVER=0 # setting 1 to disable discovery BOOTNODES=\u0026#34;kni://979159c738bb0c8c60b36267c56d2b4d4a995326be666460c3d612856caab522ebe6f81ea5cdbb605051f12cbf8f787ce0f172256545a5b3400c751afbdcd0c8@13.209.190.55:32323?discport=32323\u0026amp;ntype=bn\u0026#34; ADDITIONAL=\u0026#34;--state.trie-cache-limit 5000 --state.live-pruning\u0026#34; 2) For PN $ egrep \u0026#34;^NETWORK|NO_DISCOVER|BOOTNODES|ADDITIONAL\u0026#34; /etc/kpnd/conf/kpnd.conf NETWORK=\u0026#34;baobab\u0026#34; NETWORK_ID= NO_DISCOVER=1 # setting 1 to disable discovery BOOTNODES=\u0026#34;\u0026#34; ADDITIONAL=\u0026#34;--state.trie-cache-limit 5000 --state.live-pruning\u0026#34; 2. Check if the static-nodes.json has correct information for your PN. ** Unlike CN, PN uses a static-nodes.json file to find out where to connect.\n** If only CN information is found in the file, it is correctly configured.\n1) For both PN1 and PN2, [ \u0026#34;CN_KNI_ADDRESS@CN_INTERNAL_IP:PORT?discport=0\u0026amp;ntype=cn\u0026#34; ] If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/30_download_chaindata/20_unarchive_chaindata.html",
	"title": "Extract the chaindata",
	"tags": [],
	"description": "",
	"content": "\n2. Extract the chaindata downloaded to the DATA_DIR. 1) For CN, $ tar -C \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/data -xvf klaytn-baobab-pruning-chaindata-20240107010111.tar.gz --exclude klay/chaindata/receipts 2) For PN, $ tar -C \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/data -xvf klaytn-baobab-pruning-chaindata-20240107010111.tar.gz --exclude klay/chaindata/receipts ** If you want to reduce the time for extracting, please refer this pigz example. (Amazon Linux 2) $ sudo amazon-linux-extras install epel (CentOS) $ sudo yum install epel-release -y $ sudo yum install pigz $ tar -I pigz -C \u0026lt;your_klaytn_home_path\u0026gt;/k*nd/data -xvf klaytn-baobab-pruning-chaindata-20240107010111.tar.gz --exclude klay/chaindata/receipts\nIf you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/20_network_reset/20_stop_telegraf.html",
	"title": "Stop the Telegraf service",
	"tags": [],
	"description": "",
	"content": "\n2. Stop the Telegraf service, if it is running. 1) For both CN and PN, $ sudo systemctl status telegraf $ sudo systemctl stop telegraf $ sudo systemctl status telegraf If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/20_network_reset.html",
	"title": "Reset Network Configuration",
	"tags": [],
	"description": "",
	"content": "Chapter 2 Reset Network Configuration In this chapter, you will reset the Pre-cypress network configuration. Please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/30_download_chaindata/30_remove_chaindata.html",
	"title": "Remove Chaindata",
	"tags": [],
	"description": "",
	"content": "\n3. You can remove the chaindata downloaded, if the previous step is completed. 1) For both CN and PN, $ rm klaytn-baobab-chaindata-****************.tar.gz If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/50_start_services/30_check_the_services.html",
	"title": "Check the services",
	"tags": [],
	"description": "",
	"content": "\n3. Watch the service log to confirm if your nodes are correctly joined. ** If the node is not a proposer at that block, and the consensus is successful, the node have executed(==validates) the block. In other words, a block is inserted. _** You can refer this document for more details about node log.\n1) For CN, $ tail \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/log/kcnd.out INFO Inserted a new block number=14 hash=13cbfc…f007fc txs=0 gas=0 elapsed=793.458µs processTxs=167ns finalize=157.708µs validateState=7.542µs totalWrite=443.417µs trieWrite=256.667µs 2) For PN, $ tail \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/log/kpnd.out INFO Inserted a new block number=14 hash=13cbfc…f007fc txs=0 gas=0 elapsed=793.458µs processTxs=167ns finalize=157.708µs validateState=7.542µs totalWrite=443.417µs trieWrite=256.667µs If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/20_network_reset/30_remove_data_and_log.html",
	"title": "Remove chaindata and log",
	"tags": [],
	"description": "",
	"content": "\n3. Remove existing chaindata and log for pre-cypress. 0) During pre-cypress, you did set \u0026lt;klaytn_home_path\u0026gt; for Ansible deployment. But you can check this out if you can\u0026rsquo;t remember where your data directory is located. $ grep \u0026#34;DATA_DIR\u0026#34; /etc/kpnd/conf/kpnd.conf 1) For CN, $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/data/klay/chaindata $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/data/klay/lightchaindata $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/log/* 2) For PN, $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/data/klay/chaindata $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/data/klay/lightchaindata $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/log/* If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/20_network_reset/40_replace_bls-nodekey.html",
	"title": "replace_bls-nodekey",
	"tags": [],
	"description": "",
	"content": "\n4. Replace bls-nodekey on the CN - Except Bughole \u0026amp; Certik. BLS-Nodekey is your Private key what you generate with Klay Tool.\nIn order to operate a node, a bls-nodekey is required. The KCN binary will create a new one for you if you do not have it. If you have one, you need to put your bls-nodekey into the data directory.\n1) Rename auto-generated bls-key - will be deleted later $ mv /\u0026lt;Data_DIR\u0026gt;/klay/bls-nodekey /\u0026lt;your_klaytn_home_path\u0026gt;/data/klay/bls-nodekey_temp 2) Create bls-nodekey file $ vi /\u0026lt;Data_DIR\u0026gt;/bls-nodekey If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/30_download_chaindata.html",
	"title": "Fast Sync with Baobab",
	"tags": [],
	"description": "",
	"content": "Chapter 3 Fast Sync with Baobab chaindata Klaytn has been snapshotting Baobab chaindata once a day. In this chapter, we are going to explore where the snapshot is stored, and the latest chaindata snapshot of Baobab will be used to sync as fast as possible. Please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/50_start_services/40_check_monitoring_dashboard.html",
	"title": "Check Monitoring Dashboard",
	"tags": [],
	"description": "",
	"content": "\n4. Take a look at Grafana dashboard to confirm if your nodes are correctly joined to Baobab network. Link : Baobab Grafana ** You can refer this document to check your services further.\nhttps://docs.klaytn.foundation/node/core-cell/installation-guide/testing-the-core-cell#kcn-console-kpn-console If your nodes are shown and CN/PN Inter Connections looks 2 in this dashboard, everything is configured normally. Please send a message to Klaytn DevOps by Slack channel #cco_7th_batch. If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/40_configure_network/30_telegraf_configuration.html",
	"title": "Telegraf Configuration",
	"tags": [],
	"description": "",
	"content": "\n1. To monitor your nodes in Baobab Dashboard, please change the influxdb configuration as below: 1) For both CN and PN, $ grep -A2 \u0026#34;influxdb\u0026#34; /etc/telegraf/telegraf.d/klaytn.conf [[outputs.influxdb]] urls = [ \u0026#34;http://15.164.55.202:8086\u0026#34; ] database = \u0026#34;klaytn_beta_baobab\u0026#34; If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/40_configure_network.html",
	"title": "Configure Baobab Network",
	"tags": [],
	"description": "",
	"content": "Chapter 4 Configure Baobab Network Now, we are going to re-configure networks to join Baobab. Please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/50_start_services.html",
	"title": "Start the services",
	"tags": [],
	"description": "",
	"content": "Chapter 5 Start the services Now, we are ready to start Klaytn service for Baobab. Please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/60_conclusion.html",
	"title": "Conclusion",
	"tags": [],
	"description": "",
	"content": "\nCongratulations! Now, you are playing in the Baobab network. "
},
{
	"uri": "/klaytn-baobab-setup-workshop/",
	"title": "Klaytn - CCO Onboarding - Baobab",
	"tags": [],
	"description": "",
	"content": "\nCCO Onboarding - Baobab This online instruction let you join Klaytn Baobab network. If Consensus/Proxy node setup is already completed, you can start with chapter 2.\n"
},
{
	"uri": "/klaytn-baobab-setup-workshop/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/klaytn-baobab-setup-workshop/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]